import numpy as np
import pandas as pd
import os
import matplotlib.pyplot as plt
###############################################################
#                     VERY IMPORTANT                          #
# make sure that you use data frames of pandas and not numpy, #
# otherwise they will be converted to faulty matrices         #
###############################################################
path = '/home/abdulrahman/abdulrahman.sawalma@gmail.com/PhD/Data/Palestine/ICASSO/icasso_tpq_reco/bootstrap/'
if not os.path.exists(path):
path = path.replace("/abdulrahman/abdulrahman.sawalma@gmail.com","/asawalma/Insync/abdulrahman.sawalma@gmail.com/Google Drive")
path_infomax = path + "icasso_HC,MDD,PTSD,TNP,GAD_nsamp1822_n_comp13_n_iter100_dist0.50_bootstrap_MNEinfomax_data_reco.npz"
path_fastica = path + "icasso_HC,MDD,PTSD,TNP,GAD_nsamp1822_n_comp13_n_iter100_dist0.50_bootstrap_MNEfastica_data_reco.npz"
path_noboot_fastica = path + "../no_bootstrap/icasso_HC,MDD,PTSD,TNP,GAD_nsamp1822_n_comp13_n_iter100_dist0.40_no-bootstrap_MNEfastica_data_reco.npz"
path_ids = path + "../ids_all_sess1_2.npy"
npz_info = np.load(path_infomax, allow_pickle=True)
npz_fast = np.load(path_fastica, allow_pickle=True)
npz_noboot_fast = np.load(path_noboot_fastica, allow_pickle=True)
npz_ids = np.load(path_ids, allow_pickle=True)
npz_ids = [[item] for item in npz_ids]
# convert to list of data frames so that R can read it
# I also added the IDs for each frame using np.append
data_info = [pd.DataFrame(np.append(npz_ids,item, axis = 1)) for item in npz_info['data_reco']]
data_fast = [pd.DataFrame(np.append(npz_ids,item, axis = 1)) for item in npz_fast['data_reco']]
data_noboot_fast = [pd.DataFrame(np.append(npz_ids,item, axis = 1)) for item in npz_noboot_fast['data_reco']]
data_noboot_fast[0]
options(device = "X11")
library(reticulate)
if (dir.exists("/home/abdulrahman/anaconda3/envs/mne/bin/")){
use_python ("/home/abdulrahman/anaconda3/envs/mne/bin/python3")
}else{
use_python ("/home/asawalma/anaconda3/envs/mne/bin/python")
}
library(ggplot2)
library(psy)
library (ppcor)
library(readxl)
library(reshape2)
library(ggplot2)
library(dplyr)
# determine coltypes before reading data
colTypes = c(rep("text",11),rep("numeric",17),rep("text",1),rep("numeric",1),rep("text",6),rep("numeric",104),rep("text",100))
#read the data
score_path = "/home/abdulrahman/abdulrahman.sawalma@gmail.com/PhD/Data/TPQ_DataAndAnalysis/TPQ_Analysis_All_25.11.2020.xlsx"
if (!dir.exists(score_path)){
score_path = gsub("/abdulrahman/abdulrahman.sawalma@gmail.com","/asawalma/Insync/abdulrahman.sawalma@gmail.com/Google Drive", score_path)
}
scores = read_excel(score_path, col_types = colTypes)
#read the data
score_parent = "/home/abdulrahman/abdulrahman.sawalma@gmail.com/PhD/Data/TPQ_DataAndAnalysis/"
score_path = paste0(score_parent,"TPQ_Analysis_All_25.11.2020.xlsx")
if (!dir.exists(score_parent)){
score_path = gsub("/abdulrahman/abdulrahman.sawalma@gmail.com","/asawalma/Insync/abdulrahman.sawalma@gmail.com/Google Drive", score_path)
}
scores = read_excel(score_path, col_types = colTypes)
scores = read_excel(score_path, col_types = colTypes)
#convert the tibble object (read by readxl) to ordinary data frame
scores = as.data.frame(scores)
# convert T to 1 and F to -1, also convert "NA" to NA
for (i in 1:100){
scores[scores[,paste0("QO",i)] =="NA",paste0("QO",i)] = NA
scores[!is.na(scores[paste0("QO",i)]),paste0("QO",i)] = ifelse(scores[!is.na(scores[paste0("QO",i)]),paste0("QO",i)]=="T","1","-1")
scores[,paste0("QO",i)] = as.numeric(scores[,paste0("QO",i)])
}
# Make sure that 'scores' and 'loadings' data frames have the same arrangements
loadings_IDs = data.frame(py$data_fast[1])$X0
reticulate::repl_python()
ggplot(data_frame, aes(x= Question, y = ID))+
geom_raster(aes(fill=Loading)) +
scale_fill_gradient2(high="#CC0000", low="#08457E", mid = "white", midpoint = 0) +
ggtitle(label = "Final Loadings for All Subjects", subtitle = "For the 5 Groups of Subjects")+
TypicalTheme +
geom_hline(yintercept=Diagnoses_positions, size=0.5)
data_frame = df_fast_list[[1]]
weighted_list = sapply(1:100, function(x) paste0("QO",x))
data_frame = df_fast_list[[1]]
reticulate::repl_python()
